// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: definitions.proto

#include "definitions.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_definitions_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_definitions_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SingleLocationData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_definitions_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WarnMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_definitions_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DensityMap;
}  // namespace protobuf_definitions_2eproto
namespace com {
namespace example {
namespace peopledensitymeasurementprototype {
namespace model {
namespace proto {
class SingleLocationDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleLocationData>
      _instance;
} _SingleLocationData_default_instance_;
class DensityMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DensityMap>
      _instance;
} _DensityMap_default_instance_;
class WarnMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WarnMessage>
      _instance;
} _WarnMessage_default_instance_;
class LocationMessageWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationMessageWrapper>
      _instance;
  const ::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData* single_;
  const ::com::example::peopledensitymeasurementprototype::model::proto::DensityMap* map_;
  const ::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage* message_;
} _LocationMessageWrapper_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace peopledensitymeasurementprototype
}  // namespace example
}  // namespace com
namespace protobuf_definitions_2eproto {
static void InitDefaultsSingleLocationData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::peopledensitymeasurementprototype::model::proto::_SingleLocationData_default_instance_;
    new (ptr) ::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SingleLocationData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSingleLocationData}, {}};

static void InitDefaultsDensityMap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::peopledensitymeasurementprototype::model::proto::_DensityMap_default_instance_;
    new (ptr) ::com::example::peopledensitymeasurementprototype::model::proto::DensityMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::peopledensitymeasurementprototype::model::proto::DensityMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DensityMap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDensityMap}, {
      &protobuf_definitions_2eproto::scc_info_SingleLocationData.base,}};

static void InitDefaultsWarnMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::peopledensitymeasurementprototype::model::proto::_WarnMessage_default_instance_;
    new (ptr) ::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WarnMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWarnMessage}, {}};

static void InitDefaultsLocationMessageWrapper() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::example::peopledensitymeasurementprototype::model::proto::_LocationMessageWrapper_default_instance_;
    new (ptr) ::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_LocationMessageWrapper =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsLocationMessageWrapper}, {
      &protobuf_definitions_2eproto::scc_info_SingleLocationData.base,
      &protobuf_definitions_2eproto::scc_info_DensityMap.base,
      &protobuf_definitions_2eproto::scc_info_WarnMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SingleLocationData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DensityMap.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WarnMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocationMessageWrapper.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, hemisphere_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, northing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, easting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, bearing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData, ttl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::DensityMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::DensityMap, senderdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::DensityMap, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage, validuntil_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage, longitude_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapper, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapperDefaultTypeInternal, single_),
  offsetof(::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapperDefaultTypeInternal, map_),
  offsetof(::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapperDefaultTypeInternal, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapper, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData)},
  { 15, -1, sizeof(::com::example::peopledensitymeasurementprototype::model::proto::DensityMap)},
  { 22, -1, sizeof(::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage)},
  { 31, -1, sizeof(::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapper)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::example::peopledensitymeasurementprototype::model::proto::_SingleLocationData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::example::peopledensitymeasurementprototype::model::proto::_DensityMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::example::peopledensitymeasurementprototype::model::proto::_WarnMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::example::peopledensitymeasurementprototype::model::proto::_LocationMessageWrapper_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "definitions.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021definitions.proto\0229com.example.peopled"
      "ensitymeasurementprototype.model.proto\"\277"
      "\001\n\022SingleLocationData\022\020\n\010deviceId\030\001 \001(\005\022"
      "\021\n\ttimestamp\030\002 \001(\003\022\016\n\006zoneId\030\003 \001(\005\022\022\n\nhe"
      "misphere\030\004 \001(\010\022\020\n\010northing\030\005 \001(\005\022\017\n\007east"
      "ing\030\006 \001(\005\022\017\n\007bearing\030\007 \001(\005\022\r\n\005speed\030\010 \001("
      "\005\022\020\n\010accuracy\030\t \001(\002\022\013\n\003ttl\030\n \001(\005\"\201\001\n\nDen"
      "sityMap\022\026\n\016senderDeviceId\030\001 \001(\005\022[\n\004data\030"
      "\002 \003(\0132M.com.example.peopledensitymeasure"
      "mentprototype.model.proto.SingleLocation"
      "Data\"W\n\013WarnMessage\022\017\n\007message\030\001 \001(\t\022\022\n\n"
      "validUntil\030\002 \001(\003\022\020\n\010latitude\030\003 \001(\001\022\021\n\tlo"
      "ngitude\030\004 \001(\001\"\261\002\n\026LocationMessageWrapper"
      "\022_\n\006single\030\001 \001(\0132M.com.example.peopleden"
      "sitymeasurementprototype.model.proto.Sin"
      "gleLocationDataH\000\022T\n\003map\030\002 \001(\0132E.com.exa"
      "mple.peopledensitymeasurementprototype.m"
      "odel.proto.DensityMapH\000\022Y\n\007message\030\003 \001(\013"
      "2F.com.example.peopledensitymeasurementp"
      "rototype.model.proto.WarnMessageH\000B\005\n\003ms"
      "gB.Z,github.com/matthinc/BachelorThesisP"
      "roject/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 857);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "definitions.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_definitions_2eproto
namespace com {
namespace example {
namespace peopledensitymeasurementprototype {
namespace model {
namespace proto {

// ===================================================================

void SingleLocationData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleLocationData::kDeviceIdFieldNumber;
const int SingleLocationData::kTimestampFieldNumber;
const int SingleLocationData::kZoneIdFieldNumber;
const int SingleLocationData::kHemisphereFieldNumber;
const int SingleLocationData::kNorthingFieldNumber;
const int SingleLocationData::kEastingFieldNumber;
const int SingleLocationData::kBearingFieldNumber;
const int SingleLocationData::kSpeedFieldNumber;
const int SingleLocationData::kAccuracyFieldNumber;
const int SingleLocationData::kTtlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleLocationData::SingleLocationData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_definitions_2eproto::scc_info_SingleLocationData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
}
SingleLocationData::SingleLocationData(const SingleLocationData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&ttl_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(ttl_));
  // @@protoc_insertion_point(copy_constructor:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
}

void SingleLocationData::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ttl_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(ttl_));
}

SingleLocationData::~SingleLocationData() {
  // @@protoc_insertion_point(destructor:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  SharedDtor();
}

void SingleLocationData::SharedDtor() {
}

void SingleLocationData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SingleLocationData::descriptor() {
  ::protobuf_definitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_definitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleLocationData& SingleLocationData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_definitions_2eproto::scc_info_SingleLocationData.base);
  return *internal_default_instance();
}


void SingleLocationData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ttl_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(ttl_));
  _internal_metadata_.Clear();
}

bool SingleLocationData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 deviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 zoneId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hemisphere = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hemisphere_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 northing = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &northing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 easting = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &easting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bearing = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bearing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 speed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float accuracy = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accuracy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ttl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  return false;
#undef DO_
}

void SingleLocationData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 deviceId = 1;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->deviceid(), output);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // int32 zoneId = 3;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->zoneid(), output);
  }

  // bool hemisphere = 4;
  if (this->hemisphere() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->hemisphere(), output);
  }

  // int32 northing = 5;
  if (this->northing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->northing(), output);
  }

  // int32 easting = 6;
  if (this->easting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->easting(), output);
  }

  // int32 bearing = 7;
  if (this->bearing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bearing(), output);
  }

  // int32 speed = 8;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->speed(), output);
  }

  // float accuracy = 9;
  if (this->accuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->accuracy(), output);
  }

  // int32 ttl = 10;
  if (this->ttl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->ttl(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
}

::google::protobuf::uint8* SingleLocationData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 deviceId = 1;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->deviceid(), target);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // int32 zoneId = 3;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->zoneid(), target);
  }

  // bool hemisphere = 4;
  if (this->hemisphere() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->hemisphere(), target);
  }

  // int32 northing = 5;
  if (this->northing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->northing(), target);
  }

  // int32 easting = 6;
  if (this->easting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->easting(), target);
  }

  // int32 bearing = 7;
  if (this->bearing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bearing(), target);
  }

  // int32 speed = 8;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->speed(), target);
  }

  // float accuracy = 9;
  if (this->accuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->accuracy(), target);
  }

  // int32 ttl = 10;
  if (this->ttl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->ttl(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  return target;
}

size_t SingleLocationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // int32 deviceId = 1;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deviceid());
  }

  // int32 zoneId = 3;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zoneid());
  }

  // bool hemisphere = 4;
  if (this->hemisphere() != 0) {
    total_size += 1 + 1;
  }

  // int32 northing = 5;
  if (this->northing() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->northing());
  }

  // int32 easting = 6;
  if (this->easting() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->easting());
  }

  // int32 bearing = 7;
  if (this->bearing() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bearing());
  }

  // int32 speed = 8;
  if (this->speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->speed());
  }

  // float accuracy = 9;
  if (this->accuracy() != 0) {
    total_size += 1 + 4;
  }

  // int32 ttl = 10;
  if (this->ttl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ttl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SingleLocationData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleLocationData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleLocationData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
    MergeFrom(*source);
  }
}

void SingleLocationData::MergeFrom(const SingleLocationData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
  if (from.hemisphere() != 0) {
    set_hemisphere(from.hemisphere());
  }
  if (from.northing() != 0) {
    set_northing(from.northing());
  }
  if (from.easting() != 0) {
    set_easting(from.easting());
  }
  if (from.bearing() != 0) {
    set_bearing(from.bearing());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.accuracy() != 0) {
    set_accuracy(from.accuracy());
  }
  if (from.ttl() != 0) {
    set_ttl(from.ttl());
  }
}

void SingleLocationData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleLocationData::CopyFrom(const SingleLocationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleLocationData::IsInitialized() const {
  return true;
}

void SingleLocationData::Swap(SingleLocationData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleLocationData::InternalSwap(SingleLocationData* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  swap(deviceid_, other->deviceid_);
  swap(zoneid_, other->zoneid_);
  swap(hemisphere_, other->hemisphere_);
  swap(northing_, other->northing_);
  swap(easting_, other->easting_);
  swap(bearing_, other->bearing_);
  swap(speed_, other->speed_);
  swap(accuracy_, other->accuracy_);
  swap(ttl_, other->ttl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SingleLocationData::GetMetadata() const {
  protobuf_definitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_definitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DensityMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DensityMap::kSenderDeviceIdFieldNumber;
const int DensityMap::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DensityMap::DensityMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_definitions_2eproto::scc_info_DensityMap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
}
DensityMap::DensityMap(const DensityMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  senderdeviceid_ = from.senderdeviceid_;
  // @@protoc_insertion_point(copy_constructor:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
}

void DensityMap::SharedCtor() {
  senderdeviceid_ = 0;
}

DensityMap::~DensityMap() {
  // @@protoc_insertion_point(destructor:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  SharedDtor();
}

void DensityMap::SharedDtor() {
}

void DensityMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DensityMap::descriptor() {
  ::protobuf_definitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_definitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DensityMap& DensityMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_definitions_2eproto::scc_info_DensityMap.base);
  return *internal_default_instance();
}


void DensityMap::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  senderdeviceid_ = 0;
  _internal_metadata_.Clear();
}

bool DensityMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 senderDeviceId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &senderdeviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  return false;
#undef DO_
}

void DensityMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 senderDeviceId = 1;
  if (this->senderdeviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->senderdeviceid(), output);
  }

  // repeated .com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
}

::google::protobuf::uint8* DensityMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 senderDeviceId = 1;
  if (this->senderdeviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->senderdeviceid(), target);
  }

  // repeated .com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  return target;
}

size_t DensityMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  // int32 senderDeviceId = 1;
  if (this->senderdeviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->senderdeviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DensityMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  GOOGLE_DCHECK_NE(&from, this);
  const DensityMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DensityMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
    MergeFrom(*source);
  }
}

void DensityMap::MergeFrom(const DensityMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.senderdeviceid() != 0) {
    set_senderdeviceid(from.senderdeviceid());
  }
}

void DensityMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DensityMap::CopyFrom(const DensityMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.peopledensitymeasurementprototype.model.proto.DensityMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DensityMap::IsInitialized() const {
  return true;
}

void DensityMap::Swap(DensityMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DensityMap::InternalSwap(DensityMap* other) {
  using std::swap;
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  swap(senderdeviceid_, other->senderdeviceid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DensityMap::GetMetadata() const {
  protobuf_definitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_definitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WarnMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WarnMessage::kMessageFieldNumber;
const int WarnMessage::kValidUntilFieldNumber;
const int WarnMessage::kLatitudeFieldNumber;
const int WarnMessage::kLongitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WarnMessage::WarnMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_definitions_2eproto::scc_info_WarnMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
}
WarnMessage::WarnMessage(const WarnMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&validuntil_, &from.validuntil_,
    static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&validuntil_)) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
}

void WarnMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&validuntil_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&validuntil_)) + sizeof(longitude_));
}

WarnMessage::~WarnMessage() {
  // @@protoc_insertion_point(destructor:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  SharedDtor();
}

void WarnMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WarnMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WarnMessage::descriptor() {
  ::protobuf_definitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_definitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WarnMessage& WarnMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_definitions_2eproto::scc_info_WarnMessage.base);
  return *internal_default_instance();
}


void WarnMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&validuntil_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&validuntil_)) + sizeof(longitude_));
  _internal_metadata_.Clear();
}

bool WarnMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.example.peopledensitymeasurementprototype.model.proto.WarnMessage.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 validUntil = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &validuntil_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double longitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  return false;
#undef DO_
}

void WarnMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.example.peopledensitymeasurementprototype.model.proto.WarnMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // int64 validUntil = 2;
  if (this->validuntil() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->validuntil(), output);
  }

  // double latitude = 3;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->latitude(), output);
  }

  // double longitude = 4;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->longitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
}

::google::protobuf::uint8* WarnMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.example.peopledensitymeasurementprototype.model.proto.WarnMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // int64 validUntil = 2;
  if (this->validuntil() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->validuntil(), target);
  }

  // double latitude = 3;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->latitude(), target);
  }

  // double longitude = 4;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->longitude(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  return target;
}

size_t WarnMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int64 validUntil = 2;
  if (this->validuntil() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->validuntil());
  }

  // double latitude = 3;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // double longitude = 4;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WarnMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const WarnMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WarnMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
    MergeFrom(*source);
  }
}

void WarnMessage::MergeFrom(const WarnMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.validuntil() != 0) {
    set_validuntil(from.validuntil());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
}

void WarnMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarnMessage::CopyFrom(const WarnMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.peopledensitymeasurementprototype.model.proto.WarnMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WarnMessage::IsInitialized() const {
  return true;
}

void WarnMessage::Swap(WarnMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WarnMessage::InternalSwap(WarnMessage* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(validuntil_, other->validuntil_);
  swap(latitude_, other->latitude_);
  swap(longitude_, other->longitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WarnMessage::GetMetadata() const {
  protobuf_definitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_definitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocationMessageWrapper::InitAsDefaultInstance() {
  ::com::example::peopledensitymeasurementprototype::model::proto::_LocationMessageWrapper_default_instance_.single_ = const_cast< ::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData*>(
      ::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData::internal_default_instance());
  ::com::example::peopledensitymeasurementprototype::model::proto::_LocationMessageWrapper_default_instance_.map_ = const_cast< ::com::example::peopledensitymeasurementprototype::model::proto::DensityMap*>(
      ::com::example::peopledensitymeasurementprototype::model::proto::DensityMap::internal_default_instance());
  ::com::example::peopledensitymeasurementprototype::model::proto::_LocationMessageWrapper_default_instance_.message_ = const_cast< ::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage*>(
      ::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage::internal_default_instance());
}
void LocationMessageWrapper::set_allocated_single(::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData* single) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (single) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      single = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, single, submessage_arena);
    }
    set_has_single();
    msg_.single_ = single;
  }
  // @@protoc_insertion_point(field_set_allocated:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper.single)
}
void LocationMessageWrapper::set_allocated_map(::com::example::peopledensitymeasurementprototype::model::proto::DensityMap* map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map, submessage_arena);
    }
    set_has_map();
    msg_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper.map)
}
void LocationMessageWrapper::set_allocated_message(::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage* message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    set_has_message();
    msg_.message_ = message;
  }
  // @@protoc_insertion_point(field_set_allocated:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper.message)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationMessageWrapper::kSingleFieldNumber;
const int LocationMessageWrapper::kMapFieldNumber;
const int LocationMessageWrapper::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationMessageWrapper::LocationMessageWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_definitions_2eproto::scc_info_LocationMessageWrapper.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
}
LocationMessageWrapper::LocationMessageWrapper(const LocationMessageWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kSingle: {
      mutable_single()->::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData::MergeFrom(from.single());
      break;
    }
    case kMap: {
      mutable_map()->::com::example::peopledensitymeasurementprototype::model::proto::DensityMap::MergeFrom(from.map());
      break;
    }
    case kMessage: {
      mutable_message()->::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage::MergeFrom(from.message());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
}

void LocationMessageWrapper::SharedCtor() {
  clear_has_msg();
}

LocationMessageWrapper::~LocationMessageWrapper() {
  // @@protoc_insertion_point(destructor:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  SharedDtor();
}

void LocationMessageWrapper::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void LocationMessageWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocationMessageWrapper::descriptor() {
  ::protobuf_definitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_definitions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocationMessageWrapper& LocationMessageWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_definitions_2eproto::scc_info_LocationMessageWrapper.base);
  return *internal_default_instance();
}


void LocationMessageWrapper::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  switch (msg_case()) {
    case kSingle: {
      delete msg_.single_;
      break;
    }
    case kMap: {
      delete msg_.map_;
      break;
    }
    case kMessage: {
      delete msg_.message_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void LocationMessageWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear();
}

bool LocationMessageWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData single = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_single()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.example.peopledensitymeasurementprototype.model.proto.DensityMap map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.example.peopledensitymeasurementprototype.model.proto.WarnMessage message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  return false;
#undef DO_
}

void LocationMessageWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData single = 1;
  if (has_single()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_single(), output);
  }

  // .com.example.peopledensitymeasurementprototype.model.proto.DensityMap map = 2;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_map(), output);
  }

  // .com.example.peopledensitymeasurementprototype.model.proto.WarnMessage message = 3;
  if (has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
}

::google::protobuf::uint8* LocationMessageWrapper::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData single = 1;
  if (has_single()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_single(), deterministic, target);
  }

  // .com.example.peopledensitymeasurementprototype.model.proto.DensityMap map = 2;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_map(), deterministic, target);
  }

  // .com.example.peopledensitymeasurementprototype.model.proto.WarnMessage message = 3;
  if (has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_message(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  return target;
}

size_t LocationMessageWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (msg_case()) {
    // .com.example.peopledensitymeasurementprototype.model.proto.SingleLocationData single = 1;
    case kSingle: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.single_);
      break;
    }
    // .com.example.peopledensitymeasurementprototype.model.proto.DensityMap map = 2;
    case kMap: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.map_);
      break;
    }
    // .com.example.peopledensitymeasurementprototype.model.proto.WarnMessage message = 3;
    case kMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.message_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationMessageWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationMessageWrapper* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocationMessageWrapper>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
    MergeFrom(*source);
  }
}

void LocationMessageWrapper::MergeFrom(const LocationMessageWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kSingle: {
      mutable_single()->::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData::MergeFrom(from.single());
      break;
    }
    case kMap: {
      mutable_map()->::com::example::peopledensitymeasurementprototype::model::proto::DensityMap::MergeFrom(from.map());
      break;
    }
    case kMessage: {
      mutable_message()->::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage::MergeFrom(from.message());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void LocationMessageWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationMessageWrapper::CopyFrom(const LocationMessageWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.example.peopledensitymeasurementprototype.model.proto.LocationMessageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationMessageWrapper::IsInitialized() const {
  return true;
}

void LocationMessageWrapper::Swap(LocationMessageWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocationMessageWrapper::InternalSwap(LocationMessageWrapper* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocationMessageWrapper::GetMetadata() const {
  protobuf_definitions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_definitions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace model
}  // namespace peopledensitymeasurementprototype
}  // namespace example
}  // namespace com
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData* Arena::CreateMaybeMessage< ::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData >(Arena* arena) {
  return Arena::CreateInternal< ::com::example::peopledensitymeasurementprototype::model::proto::SingleLocationData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::example::peopledensitymeasurementprototype::model::proto::DensityMap* Arena::CreateMaybeMessage< ::com::example::peopledensitymeasurementprototype::model::proto::DensityMap >(Arena* arena) {
  return Arena::CreateInternal< ::com::example::peopledensitymeasurementprototype::model::proto::DensityMap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage* Arena::CreateMaybeMessage< ::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage >(Arena* arena) {
  return Arena::CreateInternal< ::com::example::peopledensitymeasurementprototype::model::proto::WarnMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapper* Arena::CreateMaybeMessage< ::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::com::example::peopledensitymeasurementprototype::model::proto::LocationMessageWrapper >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
